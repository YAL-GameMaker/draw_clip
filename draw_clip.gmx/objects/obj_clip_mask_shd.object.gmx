<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_test</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
clip_x = room_width / 2;
clip_y = room_height / 2;
clip_mask = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
var clip_w = 256;
var clip_h = 256;
var clip_ox = 128;
var clip_oy = 128;
if (mouse_check_button(mb_left)) {
    clip_x = mouse_x;
    clip_y = mouse_y;
}
var clip_r = 70;
var clip_r2 = 40;
if (!surface_exists(clip_mask)) {
    clip_mask = surface_create(clip_w, clip_h);
    var _color = draw_get_color();
    //
    surface_set_target(clip_mask);
    draw_clear_alpha(c_white, 0);
    draw_set_color(c_white);
    //
    draw_circle(clip_w / 2, clip_h / 2, clip_r, false);
    draw_set_blend_mode(bm_subtract);
    draw_circle(clip_w / 2, clip_h / 2, clip_r2, false);
    draw_set_blend_mode(bm_normal);
    //
    surface_reset_target();
    draw_set_color(_color);
}
var mouse_r = 40;
var clip_r = 70;
//
draw_circle(mouse_x, mouse_y, mouse_r, true);
draw_circle(clip_x, clip_y, clip_r, true);
draw_circle(clip_x, clip_y, clip_r2, true);
//
shader_set(shd_clip_mask);
var u_mask = shader_get_sampler_index(shd_clip_mask, "u_mask");
texture_set_stage(u_mask, surface_get_texture(clip_mask));
var u_rect = shader_get_uniform(shd_clip_mask, "u_rect");
shader_set_uniform_f(u_rect, clip_x - clip_ox, clip_y - clip_oy, clip_w, clip_h);
//
draw_circle(mouse_x, mouse_y, mouse_r, false);
//
shader_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
